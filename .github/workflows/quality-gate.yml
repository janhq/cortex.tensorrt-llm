name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 40
    strategy:
      matrix:
        include:
          - os: "linux"
            name: "amd64"
            runs-on: "ubuntu-18-04"
          # - os: "linux"
          #   name: "amd64"
          #   runs-on: "ubuntu-latest"
          # - os: "windows"
          #   name: "amd64"
          #   runs-on: "windows-cuda-12-0"
          # - os: "windows"
          #   name: "amd64"
          #   runs-on: "windows-latest"

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v3
      
      - name: Install make on Windows
        if: runner.os == 'windows'
        run: |
          choco install make -y

      - name: Install dependencies
        run: |
          sudo apt-get install uuid-dev
          strings /usr/lib/x86_64-linux-gnu/libc.so.6 | grep GLIBC_2.3
          cd cpp/tensorrt_llm/cortex.tensorrt-llm
          make install-dependencies

      # - name: Build engine 
      #   run: |
      #     cd cpp/tensorrt_llm/cortex.tensorrt-llm
      #     make build-engine

      - name: Build example server
        run: |
          cd cpp/tensorrt_llm/cortex.tensorrt-llm
          make build-example-server

      - name: Run e2e test
        run: |
          cd cpp/tensorrt_llm/cortex.tensorrt-llm
          make run-e2e-test

      # - name: Package
      #   run: |
      #     make package

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: cortex.tensorrt-llm-${{ matrix.os }}-${{ matrix.name }}
      #     path: ./cortex.tensorrt-llm.tar.gz
